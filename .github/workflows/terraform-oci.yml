name: Terraform OCI - WebBibliotecaTerra Single VM

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Write OCI private key to file
        run: |
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > /tmp/oci_key.pem
          chmod 600 /tmp/oci_key.pem

      - name: Create ci-secrets.tfvars from GitHub Secrets
        run: |
          cat > infra/ci-secrets.tfvars <<EOF
          tenancy_ocid = "${{ secrets.OCI_TENANCY_OCID }}"
          user_ocid = "${{ secrets.OCI_USER_OCID }}"
          fingerprint = "${{ secrets.OCI_FINGERPRINT }}"
          private_key_path = "/tmp/oci_key.pem"
          region = "${{ secrets.OCI_REGION }}"
          compartment_ocid = "${{ secrets.OCI_COMPARTMENT_OCID }}"
          subnet_id = "${{ secrets.OCI_SUBNET_ID }}"
          availability_domain = "${{ secrets.OCI_AVAILABILITY_DOMAIN }}"
          ubuntu_2204_image_ocid = "${{ secrets.OCI_UBUNTU_IMAGE_OCID }}"
          ssh_public_key = "${{ secrets.SSH_PUBLIC_KEY }}"
          instance_shape = "VM.Standard.E2.1.Micro"
          instance_display_name = "webbiblioteca-vm-2"
          EOF

      - name: Terraform init
        working-directory: infra
        run: terraform init

      - name: Terraform validate
        working-directory: infra
        run: terraform validate

      - name: Terraform apply
        working-directory: infra
        run: terraform apply -auto-approve -var-file="ci-secrets.tfvars"

      - name: Show deployment info
        working-directory: infra
        run: |
          echo "🎉 Despliegue completado!"
          echo "Public IP: $(terraform output -raw public_ip)"
          echo "SSH: ssh ubuntu@$(terraform output -raw public_ip)"
